<%
import javax.jcr.Node;
// Generate template for nodetype automatically
private void setUploadFields(name) {
    String[] illustrationHiddenField1 = ["jcrPath=/node/exo:image", "nodetype=nt:file", "mixintype=mix:referenceable", "defaultValues=illustration"];
    String[] illustrationHiddenField2 = ["jcrPath=/node/exo:image/jcr:content", "nodetype=nt:resource", "mixintype=dc:elementSet", "visible=false"];
    String[] illustrationHiddenField3 = ["jcrPath=/node/exo:image/jcr:content/jcr:encoding", "visible=false", "UTF-8"];
    String[] illustrationHiddenField4 = ["jcrPath=/node/exo:image/jcr:content/jcr:lastModified", "visible=false"];
    String[] illustrationHiddenField5 = ["jcrPath=/node/exo:image/jcr:content/dc:date", "visible=false"];
    uicomponent.addHiddenField("illustrationHiddenField1", illustrationHiddenField1);
    uicomponent.addHiddenField("illustrationHiddenField2", illustrationHiddenField2);
    uicomponent.addHiddenField("illustrationHiddenField3", illustrationHiddenField3);
    uicomponent.addCalendarField("illustrationHiddenField4", illustrationHiddenField4);
    uicomponent.addCalendarField("illustrationHiddenField5", illustrationHiddenField5);
    String[] fieldImage = ["jcrPath=/node/exo:image/jcr:content/jcr:data", "mimetype=image/*"] ;
    uicomponent.addUploadField(name, fieldImage) ;
}
def webContentNode = uicomponent.getNode();

%>
<div class="UIForm FormLayout FormScrollLayout">
<% uiform.begin();
/* start render action*/
if (uiform.isShowActionsOnTop()) uiform.processRenderAction();
/* end render action*/
%>

<div class="form-horizontal">
<div class="control-group">
<label class="control-label" for="name">Nom :</label>
			<div class="controls">
			<%
				String[] webContentFieldName = ["jcrPath=/node", "nodetype=exo:cartoon", "mixintype=mix:votable,mix:commentable,mix:i18n", "editable=if-null","validate=name,empty"] ;
uicomponent.addTextField("name", webContentFieldName) ;

%>
</div>
		</div>
<div class="control-group">
<label class="control-label">Image:</label>
			<div class="controls">
			<%
				String illustration = "illustration";
				if(webContentNode != null && webContentNode.hasNode("exo:image") && (uicomponent.findComponentById(illustration) == null)) {
					def imageNode = webContentNode.getNode("exo:image") ;
					def resourceNode = imageNode.getNode("jcr:content");
					if(resourceNode.getProperty("jcr:data").getStream().available() > 0 && !uicomponent.isDataRemoved("/exo:image/jcr:content") ){
def imgSrc = uicomponent.getImage(imageNode, "jcr:content");
def actionLink = uicomponent.event("RemoveData", "/exo:image/jcr:content");
%>
<div>
<image src="$imgSrc" rel="tooltip" data-placement="bottom" title="Remove" alt="Remove" width="100px" height="80px"/>
<a onclick="$actionLink" class="actionIcon" rel="tooltip" data-placement="bottom" title="Remove">
<i class="uiIconDelete uiIconLightGray"></i>
							</a>
</div>
			<%
					} else {
						setUploadFields(illustration);
					}
				} else {
					setUploadFields(illustration);
				}
			%>
			</div>
</div>

		<div class="control-group">
			<label class="control-label">Citation:</label>
<div class="controls">
<%
String[] your_messageFieldName = ["jcrPath=/node/exo:text", "defaultValues=", ""];
uicomponent.addTextAreaField("your_messageFieldName", your_messageFieldName);
%>
</div>
		</div>
<div class="control-group">
<label class="control-label">Link Content:</label>
			 <div class="controls">
				 <%
					String[] linkContent = ["jcrPath=/node/exo:linkContent", "defaultValues=", ""];
uicomponent.addTextField("linkContent", linkContent);
%>
</div>
		</div>

<div class="control-group">
<label class="control-label">Link Target:</label>
			 <div class="controls">
				 <%
					String[] linkTarget = ["jcrPath=/node/exo:linkTarget", "defaultValues=", ""];
uicomponent.addTextField("linkTarget", linkTarget);
%>
</div>
		</div>

</div>
	<% if (!uiform.isShowActionsOnTop()) {
						 uiform.processRenderAction()
					}
	 %>

	<%uiform.end()%>


</div>